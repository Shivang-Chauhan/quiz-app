export const Questions = [
  {
    prompt: "What is the average time complexity for finding an element in a balanced binary search tree (BST) with n nodes?",
    optionA: "O(1)",
    optionB: "O(log n)",
    optionC: "O(n)",
    optionD: "O(n^2)",
    answer: "optionB",
  },
  {
    prompt: "Which data structure follows the (LIFO) principle?",
    optionA: "Queue",
    optionB: "Linked List",
    optionC: "Stack",
    optionD: "Hashtable",
    answer: "optionC",
  },
  {
    prompt: "Which sorting algorithm has the best worst-case time complexity?",
    optionA: "Bubble Sort",
    optionB: "Insertion Sort",
    optionC: "Merge Sort",
    optionD: "Quick Sort",
    answer: "optionC",
  },
  {
    prompt: "In a singly linked list, how do you delete the first node efficiently?",
    optionA: "Traverse the entire list and then delete the first node.",
    optionB: "Update the head pointer to the second node.",
    optionC: "Both of the above.",
    optionD: "None of the above.",
    answer: "optionB",
  },
  {
    prompt: "Which search algorithm requires the data to be sorted beforehand?",
    optionA: "Linear Search",
    optionB: "Binary Search",
    optionC: "Depth-First Search (DFS)",
    optionD: "Breadth-First Search (BFS)",
    answer: "optionB",
  },
];
